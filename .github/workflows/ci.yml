name: CI

# Trigger workflow on push and pull request events
on:
  push:
    branches: [ "develop", "main", "release-*" ]        # Trigger on all branch pushes
    tags: [ 'v*' ]          # Trigger on version tags
  pull_request:
    branches: [ "develop", "main", "release-*" ]  # Trigger on PRs to these branches

# Define environment variables for Docker registry and image
env:
  REGISTRY: docker.io
  IMAGE_NAME: anyshpm/backup

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read        # Permission to read repository contents
      packages: write       # Permission to write packages
      id-token: write      # Permission for signing

    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install cosign for image signing (skip for pull requests)
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.4.0
        with:
          cosign-release: 'v2.2.3'

      # Set up QEMU for multi-architecture builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx for building images
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker registry (skip for pull requests)
      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Get the release branch version number
      - uses: valadas/get-release-branch-version@v1
        id: branchVersion

      # Extract metadata for Docker image tagging
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        env:
          VERSION: ${{ steps.branchVersion.outputs.major }}.${{ steps.branchVersion.outputs.minor }}.${{ steps.branchVersion.outputs.patch }}
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=alpha,enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=${{ env.VERSION }}-beta,enable=${{ startsWith(github.ref, 'refs/heads/release-') }}
            type=sha,prefix={{branch}}-,enable=${{ github.ref != 'refs/heads/main' }}

      # Build and push Docker image
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64    # Build for multiple architectures
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=gha,mode=max

      # Sign the Docker image using cosign (skip for pull requests)
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push.outputs.digest }}
